---
  kind: article
  title: Reproducible assembly benchmarks
  created_at: "2009-01-26 00:00 GMT"
---

New bioinformatics software is continuous produced and published. This can make
keeping track of the latest developments difficult. One way to stay up to date
is to continuously examine the literature and attend conferences. When finding
out about new bioinformatics software, there is still the problem of know how
effective the software is. For example given a new paper published on a genome
assembler, how can you know how effective it will be on your data? The
publication may include benchmarks but do these suffer from an author bias to
the best performing aspects of the assembler?

A final point to consider is that even given the best assembler for your data,
how easy is it to install? Does the software require complex dependencies to
install? Does the software inexplicably fail with obscure error messages? The
poor usability experience of bioinformatics software can lead to scientists
using the software that the colleague sitting next to them knows how to install
and use, rather that the current state of the art.

## A registry of assemblers

The recent [Assemblathon 1][asm1] and [Assemblathon 2][asm2] collectives aimed
to evaluate the current state of genome assembly. The method for their approach
was to release a set of reads and ask the genomics community to submit their
best assembly. The quality and accuracy of each of the submitted assemblies was
then evaluated. The [Genome Assembly Gold-Standard Evaluations (GAGE)][gage]
took several genome assemblers and ran them against four different read
datasets. The results of each assembler were then evaluated for performance.
The aim of this was determine which assembler gave the best results.

I believe that this can be taken a step further to solve some of the problems I
described above. For instance:

  * A registry of available assemblers, that is continuously updated as new
    assemblers become available and are published. This can act as a
    centralised repository for the current state of the art in genome assembly.
    Anyone should also be able to register an assembler.

  * Continuously benchmark software against test datasets. This would attempt
    to provide an objective evaluation of each assembler's effectiveness.
    Furthermore by running these benchmarks on a regular and reoccurring basis
    new developments could be continuously evaluated.

  * Simple installation and configuration of parameters. The assembler
    developer should specify the configuration of the assembler's parameters
    for most common scenarios. Furthermore the installation of the assembler
    should be as simple as possible, allowing a low barrier of entry for use.

To this end I created the website [nucleotides - a registry of genome
assemblers and benchmarks][nuc].

## Reproducible assembly benchmarks using Docker

The key to this website is that all assemblers are constructed as
[Docker][docker] images. If you are unfamiliar with Docker, an image is
analogous to a list of instructions or blueprint that specifies how an assembler
should be installed and used. If a system has Docker installed, this blueprint
(called a Dockerfile) can be used to install everything required to get an
assembler running. This thereby simplifies installation for an assembler, each
assembler can installed on a system with a `docker pull` pull command.

If assemblers are packaged up as Docker images using a common API then running
benchmarks against a variety of assemblers is much simpler. Each assembler can
be cloned from the repository and then given a test data set. The output of the
assembler can then be compared against the reference genome to give a benchmark
of how well the assembler performed. This is the homepage of
[nucleotid.es][nuc] where each benchmark is calculated using [quast][] against
the reference. Using a variety of test datasets it is possible for a use to see
which assembler may work best for their own data.

[asm1]: http://www.ncbi.nlm.nih.gov/pubmed/21926179

[asm2]: http://www.ncbi.nlm.nih.gov/pubmed/23870653

[gage]: http://www.ncbi.nlm.nih.gov/pubmed/22147368

[nuc]: http://nucleotid.es

[lxc]: https://linuxcontainers.org/

[docker]: http://www.docker.com/

[quast]: http://www.ncbi.nlm.nih.gov/pubmed/23422339
